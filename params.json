{"name":"Stanford-corenlp","tagline":"Clojure wrapper for Stanford CoreNLP tools.","body":"Clojure wrapper for Stanford CoreNLP tools.  Currently very incomplete, only\r\nwraps the tokenizer, parser and dependencies.\r\n\r\n[![Circle CI](https://circleci.com/gh/damienstanton/stanford-corenlp.svg?style=shield)](https://circleci.com/gh/damienstanton/stanford-corenlp)\r\n\r\n## Usage\r\n\r\n### Tokenization\r\n\r\n    (use 'corenlp)\r\n    (def text \"This is a simple sentence.\")\r\n    (tokenize text)\r\n\r\n### Part-of-Speech Tagging\r\n\r\n    (use 'corenlp)\r\n    (pos-tag (tokenize \"Colorless green ideas sleep furiously.\"))\r\n    ;; => [#<TaggedWord Colorless/JJ> #<TaggedWord green/JJ> ...]\r\n\r\nReturns a list of `TaggedWord` objects. Call `.tag()` on a `TaggedWord` instance\r\nto get its tag.\r\n\r\n### Parsing\r\n\r\nTo parse a sentence:\r\n\r\n\t(use 'corenlp)\r\n\t(parse (tokenize text))\r\n\r\nYou will get back a LabeledScoredTreeNode which you can plug in to\r\nother Stanford CoreNLP functions or can convert to a standard Treebank\r\nstring with:\r\n\r\n\t(str (parse (tokenize text)))\r\n\r\n### Stanford Dependencies\r\n\r\n\t(dependency-graph \"I like cheese.\")\r\n\r\nwill parse the sentence and return the dependency graph as a\r\n[loom](https://github.com/jkk/loom) graph, which you can then traverse with\r\nstandard graph algorithms like shortest path, etc. You can also view it:\r\n\r\n\t(def graph (dependency-graph \"I like cheese.\"))\r\n\t(use 'loom.io)\r\n\t(view graph)\r\n\r\nThis requires GraphViz to be installed.\r\n\r\n## License\r\n\r\nCopyright (C) 2011-2015 Contributors (Clojure code only)\r\n\r\nDistributed under the Eclipse Public License, the same as Clojure.\r\n\r\n## Contributors\r\n\r\n- Cory Giles \r\n- Hans Engel\r\n- Damien Stanton\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}